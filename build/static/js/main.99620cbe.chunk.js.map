{"version":3,"sources":["assets/1.svg","Components/IncomeBar.js","Components/ExpBar.js","Components/TopDisplay.js","Components/Income.js","Components/Expenses.js","Components/InputField.js","Components/App.js","serviceWorker.js","index.js","assets/2.svg"],"names":["module","exports","__webpack_require__","p","IncomeBar","props","react_default","a","createElement","className","plusAmount","ExpBar","percent","Math","floor","parseInt","minusAmount","concat","TopDisplay","_this$props","this","date","amount","expPercent","formatNumber","toFixed","console","log","Components_IncomeBar","total","Components_ExpBar","Component","Income","incomeArr","remove","map","cur","i","key","description","value","react_svg_esm","src","exit","onClick","positive","Expenses","percentHandler","num","_this","_this2","expArr","plus","ImputField","state","dropDown","minus","getDate","month","Date","getMonth","year","getFullYear","changeHandler","event","setState","Object","defineProperty","target","name","keyCreater","random","submitHandler","toConsumableArray","parseFloat","reduce","removeIncomeHandler","id","newArr","filter","toString","replace","_this$state","react","Components_TopDisplay","action","onChange","type","placeholder","min","Check","Components_Income","Components_Expenses","App","InputField","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99620cbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.c4d4981c.svg\";","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\nconst IncomeBar = props => {\r\n\r\n\r\n    return(\r\n        <div className=\"income__bar\">\r\n            <div className=\"income__bar-name\">\r\n                Income\r\n            </div>\r\n            <div className=\"income__bar-total\">\r\n             + {props.plusAmount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default IncomeBar","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst ExpBar = props => {\r\n    \r\n    const percent = Math.floor((parseInt(props.minusAmount) / parseInt(props.plusAmount))*100)\r\n\r\n    return(\r\n        <div className=\"exp__bar\">\r\n            <div className=\"exp__bar-name\">\r\n                expenses\r\n            </div>\r\n            <div className=\"exp__bar-total\">\r\n             - {props.minusAmount}\r\n            </div>\r\n            <div className=\"exp__bar-percent\"> { !props.plusAmount || props.plusAmount < 1 ?'-' : `${percent}%` } </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ExpBar;","import React, { Component } from 'react';\r\nimport IncomeBar from './IncomeBar';\r\nimport ExpBar from './ExpBar';\r\n\r\nclass TopDisplay extends Component {\r\n\r\n    \r\n   \r\n  \r\n\r\n    \r\n    render(){\r\n        \r\n\r\n        let { date, amount, expPercent, plusAmount, minusAmount, formatNumber } = this.props\r\n        \r\n        \r\n        \r\n        amount = parseInt(amount).toFixed(2)\r\n\r\n\r\n       \r\n\r\n       \r\n\r\n\r\n        console.log(amount, \"amount in topdisplay\")\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"topDisplay\">\r\n                    <div className=\"topDisplay__text-header\">\r\n                    Available Budget in {date}\r\n                    </div>\r\n                    <div className=\"topDisplay__amount\">{`$ ${formatNumber(amount)}`}</div> \r\n                    <IncomeBar\r\n                    plusAmount={plusAmount}\r\n                    total={amount}/>\r\n                    <ExpBar \r\n                    minusAmount = {minusAmount}\r\n                    \r\n                    plusAmount = {plusAmount}/>  \r\n                             \r\n                </div>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TopDisplay;","import React, { Component } from 'react';\r\nimport ReactSVG from 'react-svg'\r\nimport exit from '../assets/2.svg';\r\n\r\n\r\n\r\n\r\nclass Income extends Component {\r\n\r\n       \r\n\r\n\r\n    render(){\r\n        const{incomeArr, remove, formatNumber} = this.props;\r\n\r\n        \r\n        \r\n        return(\r\n            <div className = \"income\">\r\n            <h1 className=\"income__header\">Income</h1>\r\n            {incomeArr.map((cur, i) => (\r\n                <div \r\n                key={cur.key}\r\n                className={ i%2 !== 0 ? \"income__data gray\": \"income__data\"}>\r\n                    <div className=\"income__data-description\">{cur.description}</div>\r\n                    <div className=\"income__data-value\">+ {formatNumber(parseInt(cur.value).toFixed(2))}</div>\r\n                    <ReactSVG className=\"income__data-svg\" src={exit} onClick= {()=>remove(cur.key, cur.positive)}/>              \r\n                   \r\n\r\n                </div>\r\n                \r\n            ))}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Income;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ReactSVG from 'react-svg'\r\nimport exit from '../assets/2.svg';\r\n\r\n\r\n\r\n\r\nclass Expenses extends Component {\r\n    percentHandler =(num) => {\r\n        if(this.props.plusAmount && this.props.plusAmount >= 1){\r\n            let amount = parseInt(this.props.plusAmount)\r\n            let percent = Math.floor((parseInt(num) / amount)*100);\r\n            \r\n            return `${percent}%`\r\n\r\n        }\r\n       \r\n    }\r\n\r\n    render(){\r\n\r\n        const {expArr, remove, plusAmount, formatNumber, plus} = this.props;\r\n        \r\n\r\n        return(\r\n            <div className = \"expenses\">\r\n            <h1  className=\"expenses__header\">Expenses</h1>\r\n            {expArr.map((cur, i) => (\r\n                <div \r\n                key={cur.key}\r\n                className={i%2 !== 0 ? \"expenses__data gray\": \"expenses__data\"}>\r\n                    <div className=\"expenses__data-description\">{cur.description}</div>\r\n                    \r\n                    <div className=\"expenses__data-value\">- {formatNumber(parseInt(cur.value).toFixed(2))}</div>\r\n                    <div className=\"expenses__data-percent\">{plusAmount ? this.percentHandler(cur.value) : null}</div>\r\n                    <ReactSVG className=\"expenses__data-svg\" src={exit} onClick= {()=>remove(cur.key, cur.positive)}/>              \r\n                    \r\n\r\n                </div>\r\n                \r\n            ))}\r\n\r\n            </div>\r\n            \r\n          \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Expenses;\r\n\r\n","import React, { Component, Fragment  } from 'react';\r\nimport ReactSVG from 'react-svg'\r\nimport TopDisplay from './TopDisplay';\r\nimport Income from './Income';\r\nimport Expenses from './Expenses';\r\nimport Check from '../assets/1.svg';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ImputField extends Component {\r\n\r\n    state = {\r\n        amount: 0,\r\n        expPercent: null,\r\n        description: '',\r\n        dropDown: \"+\",\r\n        value: '',\r\n        plus: [],\r\n        minus: [],\r\n        plusAmount: 0,\r\n        minusAmount: 0,\r\n\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n    getDate = () => {        \r\n        let month = new Date().getMonth();\r\n        let year = new Date().getFullYear();\r\n        const currentMonth = ['January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        return `${currentMonth[month]} ${year}:`\r\n    }\r\n\r\n    changeHandler = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    keyCreater = () => {\r\n\r\n        return Math.random() * 1000;\r\n    }\r\n\r\n    submitHandler = () => {        \r\n\r\n        if (this.state.value && this.state.description && this.state.dropDown === '+'){\r\n\r\n            let plus = [...this.state.plus, {\r\n                key: this.keyCreater(),\r\n                description: this.state.description,\r\n                value: this.state.value,\r\n                positive: true,\r\n\r\n            }]\r\n            let amount = (parseFloat(this.state.amount) + parseFloat(this.state.value))\r\n            let plusAmount = plus.reduce((a,cur)=> {\r\n                return a+ parseInt(cur.value)\r\n            }, 0)\r\n            let a = amount.toFixed(2)\r\n            plusAmount = parseInt(plusAmount).toFixed(2)\r\n\r\n            console.log(amount, a)\r\n            this.setState({\r\n                amount: a,\r\n                plusAmount,\r\n                plus,                \r\n                value: '',\r\n                description: '', \r\n            })\r\n\r\n            \r\n            \r\n        }else if(this.state.value && this.state.description && this.state.dropDown === '-') {\r\n            let minus = [...this.state.minus, {\r\n                key: this.keyCreater(),\r\n                description: this.state.description,\r\n                value: this.state.value,\r\n                positive: false,\r\n\r\n            }]\r\n\r\n            let amount = (parseFloat(this.state.amount) - parseFloat(this.state.value))\r\n            \r\n            let a = amount.toFixed(2)\r\n\r\n            let minusAmount = minus.reduce((a,cur) => {\r\n                return a + parseInt(cur.value)\r\n            },0)\r\n\r\n            minusAmount = parseInt(minusAmount).toFixed(2)\r\n\r\n            this.setState({\r\n                amount: a,\r\n                minusAmount,\r\n\r\n                minus,\r\n                value: '',\r\n                description: '', \r\n            })\r\n\r\n        }\r\n\r\n       \r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    removeIncomeHandler = (id, positive) => {        \r\n        \r\n        if(positive){\r\n            const arr = [...this.state.plus];\r\n            const newArr = arr.filter(cur => {\r\n                return cur.key !== id;\r\n            })    \r\n            let plusAmount = newArr.reduce((a, cur) => {\r\n                return a + parseInt(cur.value)\r\n            }, 0)\r\n\r\n            let minus = this.state.minus.reduce((a,cur)=>{\r\n                return a + parseInt(cur.value);\r\n            },0)\r\n            let amount = plusAmount - minus;\r\n            amount = amount.toFixed(2)\r\n            plusAmount = parseInt(plusAmount).toFixed(2)\r\n\r\n            this.setState({\r\n                plus: newArr,\r\n                amount,\r\n                plusAmount, \r\n            })\r\n        }else if(!positive){\r\n            const arr = [...this.state.minus];\r\n            const newArr = arr.filter(cur => {\r\n                return cur.key !== id;\r\n            })    \r\n            let minusAmount = newArr.reduce((a, cur) => {\r\n                return  a + parseInt(cur.value)\r\n            }, 0)\r\n\r\n            let income = this.state.plus.reduce((a, cur) => {\r\n                return a + parseInt(cur.value)\r\n            }, 0)\r\n\r\n            minusAmount = parseInt(minusAmount).toFixed(2)\r\n            \r\n           \r\n        \r\n            let amount = (income - minusAmount).toFixed(2)\r\n            this.setState({\r\n                minus: newArr,\r\n                amount,\r\n                minusAmount,\r\n            })\r\n\r\n        }\r\n        \r\n        \r\n       \r\n       \r\n    }\r\n\r\n    formatNumber = (num) => {\r\n        return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\r\n    }\r\n\r\n    \r\n\r\n\r\n    render(){\r\n        const {amount, expPercent, description, dropDown, value, plus, minus, plusAmount, minusAmount} = this.state;\r\n\r\n       \r\n        \r\n\r\n        return(\r\n            <Fragment>\r\n                <TopDisplay\r\n                date = {this.getDate()}\r\n                plusAmount = {plusAmount}\r\n                minusAmount= {minusAmount}\r\n                amount = {amount}\r\n                expPercent={expPercent}\r\n                formatNumber ={this.formatNumber}\r\n                 />\r\n            \r\n            <div className=\"imputField\">\r\n                <form action=\"\" className=\"imputField__form\">\r\n                    <select name=\"dropDown\" id=\"\" className= {dropDown === '+' ? \"imputField__form-dropdown green\": \"imputField__form-dropdown red\"} onChange={this.changeHandler}>\r\n                        <option value=\"+\" className=\"plus\">+</option>\r\n                        <option value=\"-\" className=\"minus\">-</option>\r\n                    </select>\r\n                    <input \r\n                    className={dropDown === '+' ? \"imputField__form-input green\" : \"imputField__form-input red\"}\r\n                    type=\"text\"\r\n                    value={description}\r\n                    placeholder=\"Add Description\"\r\n                    name='description'\r\n                    onChange={this.changeHandler}\r\n                    >\r\n                    </input>\r\n                    <input\r\n                    type=\"number\"\r\n                    min='0'\r\n                    name='value'\r\n                    value={value}\r\n                    placeholder= 'Value'\r\n                    onChange={this.changeHandler}\r\n                    className= {dropDown === '+'? \"imputField__form-amount green\": \"imputField__form-amount red\"}\r\n                    >\r\n                    </input>\r\n                    <ReactSVG \r\n                    src={Check} \r\n                    className={dropDown === '+'? \"check check-green\": \"check check-red\"}\r\n                    onClick={this.submitHandler}/> \r\n                </form>     \r\n            </div>\r\n            <div className=\"bottomContainer\">\r\n                <Income\r\n                 incomeArr = {plus}\r\n                 remove = {this.removeIncomeHandler}\r\n                 formatNumber = {this.formatNumber}\r\n                 />\r\n                <Expenses\r\n                expArr = {minus}\r\n                remove = {this.removeIncomeHandler}\r\n                plusAmount = {plusAmount}\r\n                formatNumber = {this.formatNumber}\r\n                incomeArr = {plus}\r\n\r\n                 />\r\n            </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ImputField;","import React, { Component } from 'react';\r\nimport TopDisplay from './TopDisplay';\r\nimport InputField from './InputField';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"app\">\r\n                \r\n                <InputField />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./sass/main.scss\";\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/2.629b03c8.svg\";"],"sourceRoot":""}